
@{
    ViewBag.Title = "Perfil Usuario";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<!-- Content Wrapper. Contains page content -->
<div class="content-wrapper">
    <!-- Content Header (Page header) -->
    <section class="content-header">
        <div class="container-fluid">
            <div class="row mb-2">
            </div>
        </div><!-- /.container-fluid -->
    </section>

    <!-- Main content -->
    <section class="content">
        <div class="container-fluid">
            <div class="row">
                <div class="col-md-3">

                    <!-- Profile Image -->
                    <div class="card card-secondary card-outline">
                        <div class="card-body box-profile">
                            <div class="text-center">
                                <img class="profile-user-img img-fluid img-circle"
                                     src="~/Content/img/profile_avatar.png"
                                     alt="User profile picture">
                            </div>

                            <h3 class="profile-username text-center" id="lblNameTitle"></h3>

                            <p class="text-muted text-center">Arquisoft</p>

                            <ul class="list-group list-group-unbordered mb-3">
                                <li class="list-group-item">
                                    <b>Rol del Sistema</b> <a class="float-right" id="lblRole">Editor</a>
                                </li>
                            </ul>

                            <a data-target="#passwordModal" data-toggle="modal" href="#passwordModal" class="btn btn-outline-secondary btn-block"><b>Cambiar contraseña</b></a>
                        </div>
                        <!-- /.card-body -->
                    </div>
                    <!-- /.card -->
                </div>
                <!-- /.col -->
                <div class="col-md-9">
                    <div class="card">
                        <div class="card-header p-2">
                            <ul class="nav nav-pills">
                                <li class="nav-item"><a class="nav-link active" href="#settings" data-toggle="tab">Configurar usuario</a></li>
                            </ul>
                        </div><!-- /.card-header -->
                        <div class="card-body">
                            <div class="tab-content">
                                <div class="active tab-pane" id="settings">
                                    <form class="form-horizontal" role="form" id="userForm">

                                        <input type="hidden" id="txtId" />
                                        <div class="form-group row">
                                            <label for="txtName" class="col-sm-2 col-form-label">Nombre</label>
                                            <div class="col-sm-10">
                                                <input type="text" class="form-control" id="txtName" name="txtName" placeholder="Nombre">
                                            </div>
                                        </div>
                                        <div class="form-group row">
                                            <label for="txtLastName" class="col-sm-2 col-form-label">Apellidos</label>
                                            <div class="col-sm-10">
                                                <input type="text" class="form-control" id="txtLastName" name="txtLastName" placeholder="Apellidos">
                                            </div>
                                        </div>
                                        <div class="form-group row">
                                            <label for="txtEmail" class="col-sm-2 col-form-label">Correo electrónico</label>
                                            <div class="col-sm-10">
                                                <input type="email" class="form-control" id="txtEmail" name="txtEmail" placeholder="Correo electrónico">
                                            </div>
                                        </div>
                                        <div class="form-group row">
                                            <label for="txtUsername" class="col-sm-2 col-form-label">Nombre de usuario</label>
                                            <div class="col-sm-10">
                                                <input type="text" class="form-control" id="txtUsername" name="txtUsername" placeholder="Nombre de usuario">
                                            </div>
                                        </div>

                                        <div class="form-group row">
                                            <div class="offset-sm-2 col-sm-10">
                                                <button type="submit" class="btn btn-outline-secondary">Guardar datos</button>
                                            </div>
                                        </div>
                                    </form>
                                </div>
                                <!-- /.tab-pane -->
                            </div>
                            <!-- /.tab-content -->
                        </div><!-- /.card-body -->
                    </div>
                    <!-- /.card -->
                </div>
                <!-- /.col -->
            </div>
            <!-- /.row -->
        </div><!-- /.container-fluid -->
    </section>
    <!-- /.content -->
</div>

@section scripts{
    <script>

        const api = new UserApi();
        const emailRegex = app.enums.Regex.Email;

            // On load event - Initial event
        $(document).ready(function () {

            // Methods who add or remove de styled classes
            $.validator.setDefaults({
                //Add Error Class To Fieldset if field invalid
                highlight: function (element) {
                    $(element).addClass('is-invalid').removeClass('is-valid');
                },
                //Add Valid Class To Fieldset if field valid
                unhighlight: function (element) {
                    $(element).removeClass('is-invalid').addClass('is-valid');
                },
                errorPlacement: function (error, element) {
                    error.addClass('validation-error text-red small').insertAfter(element);
                }
            });

            // Custom methods for validations
            $.validator.addMethod('emailRegex', function (value, element, parameter) {
                return value.match(emailRegex);
            }, '');

            // Form validations
            var validator = $("#userForm").validate({
                rules: {
                    txtName: {
                        required: true,
                        minlength: 1
                    },
                    txtLastName: {
                        required: true,
                        minlength: 1
                    },
                    txtEmail: {
                        required: true,
                        emailRegex: true
                    },
                    txtUsername: {
                        required: true,
                        minlength: 2
                    }
                },
                messages: {
                    txtName: {
                        required: "Requerido",
                        minlength: "Ingrese un nombre válido."
                    },
                    txtLastName: {
                        required: "Requerido",
                        minlength: "Ingrese un apellido válido."
                    },
                    txtEmail: {
                        required: "Requerido",
                        emailRegex: "Ingrese un correo válido"
                    },
                    txtUsername: {
                        required: "Requerido",
                        minlength: "Ingrese un nombre de usuario válido."
                    }
                }
            });

            LoadUserData();

        });

        function LoadUserData() {
                api.GetSessionUser().then(user => {
                    if (user) {
                        $("#txtId").val(user.Id);
                        $("#txtName").val(user.Name);
                        $("#txtLastName").val(user.Last_Name);
                        $("#txtEmail").val(user.Email);
                        $("#txtUsername").val(user.Username);
                        $("#lblNameTitle").text(`${user.Name} ${user.Last_Name}`)
                        $("#lblRole").text(user.IdRole)
                    }
                });
        }

        // Submit form method
        $("#userForm").on("submit", function (e) {
            if (ValidateInputs()) {
                var $data = {
                    oUser: {
                        Id: parseInt($("#txtId").val()),
                        Name: $("#txtName").val(),
                        Last_Name: $("#txtLastName").val(),
                        Email: $("#txtEmail").val(),
                        Username: $("#txtUsername").val(),
                    }
                }

                api.SaveCurrentUser($data).then(response => {
                    if (response.result === 'OK') {
                        toastr.success('Usuario guardado correctamente.');
                    } else {
                        toastr.error(response.result);
                    }

                }).catch(err => {

                    toastr.error("Ocurrió un error guardando los datos del usuario.");
                })
            }
            else
                toastr.error('Por favor valide los datos ingresados.');
        })

        // Validate id exist invalid inputs
        function ValidateInputs() {
            return $(".is-invalid")[0] ? false : true;
        }


    </script>
    }