
@{
    ViewBag.Title = "Usuarios";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<!-- Content Wrapper. Contains page content -->
<div class="content-wrapper">
    <!-- Main content -->
    <!-- Usuarios -->
    <section class="content">

        <div class="card-body p-2" style="background-color:whitesmoke">
            <table class="display responsive nowrap" id="myTable" style="width:100%" data-page-length='10'>
                <thead>
                    <tr>
                        <th>Nombre</th>
                        <th>Apellido</th>
                        <th>Correo</th>
                        <th>Nombre Usuario</th>
                        <th></th>
                    </tr>
                </thead>

            </table>
        </div>        
    </section>

</div>
<!-- /.content-wrapper -->
<!-- Modal -->
<div class="modal" id="usersModal" role="dialog">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <button type="button" class="close" data-dismiss="modal">&times;</button>
                <h4 class="modal-title">Add Stuff</h4>
            </div>
            <div class="modal-body">
                <form role="form" id="userForm">

                    <input type="hidden" id="txtId" />

                    <div class="form-group">
                        <input type="checkbox" class="form-check-input m-0" id="chkEnable">
                        <label class="form-check" for="chkEnable">Activo</label>
                    </div>

                    <div class="row">
                        <div class="form-group col-6">
                            <label for="txtName">Nombre:</label>
                            <input type="text" class="form-control" id="txtName" name="txtName">
                        </div>
                        <div class="form-group col-6">
                            <label for="txtLastName">Apellido:</label>
                            <input type="text" class="form-control" id="txtLastName" name="txtLastName">
                        </div>
                    </div>

                    <div class="row">
                        <div class="form-group col-6">
                            <label for="txtUsername">Nombre de usuario:</label>
                            <input type="text" class="form-control" id="txtUsername" name="txtUsername">
                        </div>
                        <div class="form-group col-6">
                            <label for="txtPassword">Contraseña:</label>
                            <input type="password" class="form-control" id="txtPassword" name="txtPassword">
                        </div>
                    </div>

                    <div class="row">
                        <div class="form-group col-12">
                            <label for="txtEmail">Correo:</label>
                            <input type="text" class="form-control" id="txtEmail" name="txtEmail">
                        </div>
                    </div>


                    <div class="modal-footer">
                        @if (ArquisoftApp.Controllers.AppController.IsAuthorized(ArquisoftApp.Common.AppEnums.Permissions.USER_EDIT))
                        {
                            <button type="submit" class="btn btn-success" id="btnSaveIt">Guardar</button>
                        }
                        
                        <button type="button" class="btn btn-default" id="btnCloseIt" data-dismiss="modal">Cerrar</button>
                    </div>
                </form>
            </div>
        </div>
    </div>
</div>

<!-- /.modal -->




@section scripts{
    
    <script>
        var users_table;
        var emailRegex = app.enums.Regex.Email;
        var passwordRegex = app.enums.Regex.Password;

        // Document ready
        $(document).ready(function () {
             // Load table data method
             users_table = $('#myTable').DataTable({
                "ajax": {
                    "url": "@Url.Action("List", "User")",
                    "type": "GET",
                    "datatype": "json"
                },
                "columns": [
                    { "data": "Name" },
                    { "data": "Last_Name" },
                    { "data": "Email" },
                    { "data": "Username" },
                    { "data": "Id", "render": function (data) {

                        var buttons = "";

                        @if (ArquisoftApp.Controllers.AppController.IsAuthorized(ArquisoftApp.Common.AppEnums.Permissions.USER_READ))
                        {
                            <text> buttons += "<button class='btn btn-primary btn-sm' type='button' onclick='openModal(" + data + ", \"Editar\")'>Editar &nbsp;<i class='fas fa-pen'></i></button>"</text>
                        }

                        @if(ArquisoftApp.Controllers.AppController.IsAuthorized(ArquisoftApp.Common.AppEnums.Permissions.USER_DELETE))
                         {
                            <text> buttons += "<button class='btn btn-danger btn-sm ml-2' type='button' onclick='Delete(" + data + ")'> Eliminar &nbsp;<i class='fa fa-trash'></i></button>" </text>
                         }

                        return buttons;

                        },
                        "orderable": false,
                        "searchable": false,
                        "width": "100px"
                    }
                ],
                dom: 'Bfrtip',
                buttons: [
                    @if(ArquisoftApp.Controllers.AppController.IsAuthorized(ArquisoftApp.Common.AppEnums.Permissions.USER_ADD))
                    {
                        <text>
                        {
                            text: 'Agregar Nuevo',
                            attr: { class: 'btn btn-success btn-sm' },
                            action: function (e, dt, node, config) {
                                openModal(0, "Agregar");
                            }
                        }
                        </text>

                     }
                     else
                     {
                        <text></text>
                     }
                 ],
                 "language": {
                        "url": "@Url.Content("~/Content/datatable/idioma/datatable.es-ES.json")"
                 }

             });

            // Methods who add or remove de styled classes
            $.validator.setDefaults({
                //Add Error Class To Fieldset if field invalid
                highlight: function (element) {
                    $(element).addClass('is-invalid').removeClass('is-valid');
                },
                //Add Valid Class To Fieldset if field valid
                unhighlight: function (element) {
                    $(element).removeClass('is-invalid').addClass('is-valid');
                },
                errorPlacement: function (error, element) {
                    error.addClass('validation-error text-red small').insertAfter(element);
                }
            });

            // Custom methods for validations
            $.validator.addMethod('emailRegex', function (value, element, parameter) {
                return value.match(emailRegex);
            }, '');

            $.validator.addMethod('passwordRegex', function (value, element, parameter) {
                return value.match(passwordRegex);
            }, '');

            // Form validations
            var validator = $("#userForm").validate({
                rules: {
                    txtName: {
                        required: true,
                        minlength: 1
                    },
                    txtLastName: {
                        required: true,
                        minlength: 1
                    },
                    txtUsername: {
                        required: true,
                        minlength: 5
                    },
                    txtPassword: {
                        required: true,
                        passwordRegex: true,
                    },
                    txtEmail: {
                        required: true,
                        emailRegex: true
                    }
                },
                messages: {
                    txtName: {
                        required: "Requerido",
                        minlength: "Ingrese un nombre válido."
                    },
                    txtLastName: {
                        required: "Requerido",
                        minlength: "Ingrese un apellido válido."
                    },
                    txtUsername: {
                        required: "Requerido",
                        minlength: "Ingrese un nombre de usuario válido."
                    },
                    txtPassword: {
                        required: "Requerido",
                        passwordRegex: "La contraseña debe cumplir con: mínimo 8 caracteres, al menos una letra mayúscula, una letra minúscula y un número."
                    },
                    txtEmail: {
                        required: "Requerido",
                        emailRegex: "Ingrese un correo válido"
                    }
                }
            });
         });

        // Open modal methos
        function openModal($userId, action) {

            CleanModal();
            $("#txtId").val($userId);
            $(".modal-title").text(action);
            if ($userId != 0) {

                jQuery.ajax({
                    url: "@Url.Action("Get","User")" + "?userId=" + $userId,
                    type: "GET",
                    dataType: "json",
                    contentType: "application/json; charset=utf-8",
                    success: function (data) {

                        if (data != null) {

                            $("#chkEnable").prop('checked', data.IdState == app.enums.States.ACTIVE ? true : false);
                            $("#txtName").val(data.Name);
                            $("#txtLastName").val(data.Last_Name);
                            $("#txtEmail").val(data.Email);
                            $("#txtPassword").val(data.Password);
                            $("#txtUsername").val(data.Username);
                        }

                    }
                });
            } else {

                $("#chkEnable").prop('checked', false);
                $("#txtName").val("");
                $("#txtLastName").val("");
                $("#txtEmail").val("");
                $("#txtPassword").val("");
                $("#txtUsername").val("");
            }

            $('#usersModal').modal('show');

        }

        // Submit form method
        $("#userForm").on("submit", function (e) {
            if (ValidateInputs()) {
                var $data = {
                    oUser: {
                        Id: parseInt($("#txtId").val()),
                        Name: $("#txtName").val(),
                        Last_Name: $("#txtLastName").val(),
                        Email: $("#txtEmail").val(),
                        Password: $("#txtPassword").val(),
                        Username: $("#txtUsername").val(),
                        idState: $("#chkEnable").prop('checked') ? app.enums.States.ACTIVE : app.enums.States.DISABLE
                    }
                }

                jQuery.ajax({
                    url: "@Url.Action("Save", "User")",
                    type: "POST",
                    data: JSON.stringify($data),
                    dataType: "json",
                    contentType: "application/json; charset=utf-8",
                    success: function (data) {

                        if (data.result === 'OK') {
                            users_table.ajax.reload();
                            $('#usersModal').modal('hide');
                            toastr.success('Usuario guardado correctamente.')
                        } else {
                            toastr.error(data.result)
                        }
                    },
                    error: function (error) {
                        console.log(error)
                    },
                    beforeSend: function () {

                    }
                });
            }
            else {
                toastr.error('Por favor valide los datos ingresados.')
            }
        })

        // Delete user method
        function Delete($userId) {
            if (confirm("¿Realmente desea eliminar?")) {

                jQuery.ajax({
                    url: "@Url.Action("Delete", "User")" + "?userId=" + $userId,
                    type: "GET",
                    dataType: "json",
                    contentType: "application/json; charset=utf-8",
                    success: function (data) {

                        if (data.result) {
                            users_table.ajax.reload();
                        }
                    }
                });


            }
        }

        // Validate id exist invalid inputs
        function ValidateInputs() {
            return $(".is-invalid")[0] ? false : true;
        }

        function CleanModal() {

                $("#txtEmail").removeClass("is-invalid");
                $("#txtEmail").removeClass("is-valid");
                $("#txtPassword").removeClass("is-invalid");
                $("#txtPassword").removeClass("is-valid");
                $("#txtName").removeClass("is-invalid");
                $("#txtName").removeClass("is-valid");
                $("#txtLastName").removeClass("is-invalid");
                $("#txtLastName").removeClass("is-valid");
                $("#txtUsername").removeClass("is-invalid");
                $("#txtUsername").removeClass("is-valid");
                $('.validation-error').remove();
        }

    </script>
}
