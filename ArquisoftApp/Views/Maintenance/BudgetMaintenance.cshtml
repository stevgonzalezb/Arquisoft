
@{
    ViewBag.Title = "Presupuesto";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<!-- Content Wrapper. Contains page content -->
<div class="content-wrapper">
    <!-- Main content -->
    <!-- Usuarios -->
    <section class="content">
        <div class="card-body p-2" style="background-color:whitesmoke">
            <div class="row">
                <div class="col-7">
                    <div class="card card-dark" style="overflow-y: initial !important">
                        <div class="card-header">
                            <h3 class="card-title">Presupuesto</h3>

                            <div class="card-tools">
                                <button type="button" class="btn btn-tool" data-card-widget="collapse" title="Collapse">
                                    <i class="fas fa-minus"></i>
                                </button>
                            </div>
                        </div>
                        <div class="card-body" style="height: 77vh; overflow-y: auto;">
                            <table class="display responsive nowrap table-head-fixed text-nowrap" id="myTable" style="width:100%" data-page-length='10'>
                                <thead>
                                    <tr>
                                        <th>Material</th>
                                        <th>Unidad</th>
                                        <th>Cantidad</th>
                                        <th>Precio</th>
                                        <th>Total</th>
                                        <th></th>
                                    </tr>
                                </thead>
                            </table>
                        </div>
                        <!-- /.card-body -->
                    </div>
                </div>

                <div class="col-5">
                    <div class="card card-dark">
                        <div class="card-header">
                            <h3 class="card-title">Materiales</h3>

                            <div class="card-tools">
                                <button type="button" class="btn btn-tool" data-card-widget="collapse" title="Collapse">
                                    <i class="fas fa-minus"></i>
                                </button>
                            </div>
                        </div>
                        <div class="card-body" style="background-color:whitesmoke">
                            <div class="row">
                                <div class="form-group col-9">
                                    <label for="cmbMaterials">Seleccione un material</label>
                                    <select id="cmbMaterials" class="form-control select2bs4">
                                        <option value="0">Seleccione un material...</option>
                                    </select>
                                </div>
                                <div class="form-group col-3">
                                    <label for="cmbUOM">U. Medida</label>
                                    <select id="cmbUOM" class="form-control select2">
                                        <option value="0">Seleccione unidad...</option>
                                        <option>Kg</option>
                                        <option>Unidad</option>
                                        <option>Metro</option>
                                    </select>
                                </div>
                            </div>

                            <div class="row">
                                <div class="form-group col-8">
                                    <label for="txtMaterialDescription">Descripción</label>
                                    <input type="text" id="txtMaterialDescription" class="form-control" value="">
                                </div>
                                <div class="form-group col-2">
                                    <label for="txtQuantity">Cantidad</label>
                                    <input type="number" min="0" id="txtQuantity" class="form-control" value="0" step="1">
                                </div>
                                <div class="form-group col-2">
                                    <label for="txtPrice">Precio(₡)</label>
                                    <input type="number" min="0" id="txtPrice" class="form-control" value="0" step="5">
                                </div>
                            </div>
                            <hr />
                            <div class="row">
                                <div class="form-group col-4">
                                    <label for="txtPreSubtotal">Total Línea</label>
                                    <input type="text" id="txtTotalLine" class="form-control" value="₡0" disabled>
                                </div>
                                <div class="form-group col-4">
                                    <label for="txtPreFinalTotal">Subtotal</label>
                                    <input type="text" id="txtPreSubtotal" class="form-control" value="₡0" disabled>
                                </div>
                                <div class="form-group col-md-4 align-self-end">
                                    <button type="button" onclick="SaveBudgetLine('A')" class="btn btn-secondary">Agregar</button>
                                    <a href="" id="btnViewVendor" class="btn btn-outline-secondary " target="_blank"><i class="nav-icon fas fa-truck-pickup"></i></a>
                                </div>
                            </div>
                        </div>
                        <!-- /.card-body -->
                    </div>

                    <div class="card card-navy">
                        <div class="card-header">
                            <h3 class="card-title">Totales</h3>

                            <div class="card-tools">
                                <button type="button" class="btn btn-tool" data-card-widget="collapse" title="Collapse">
                                    <i class="fas fa-minus"></i>
                                </button>
                            </div>
                        </div>
                        <div class="card-body" style="background-color: lightgray">
                            <div class="row">
                                <div class="form-group col-md-4">
                                    <label for="txtSubtotal">Subtotal</label>
                                    <input type="text" id="txtSubtotal" class="form-control" value="₡0" disabled>
                                </div>
                                <div class="form-group col-md-3">
                                    <label for="txtFees">Honorarios(%)</label>
                                    <input type="number" id="txtFees" class="form-control" value="0" step="1">
                                </div>
                                <div class="form-group col-md-5">
                                    <label for="txtFinalTotal">Total General</label>
                                    <input type="text" id="txtFinalTotal" class="form-control" value="₡0" disabled>
                                </div>
                            </div>
                            @*<hr />*@
                            <div class="row">
                                <div class="form-group col-12 align-self-end">
                                    <button type="button" onclick="" class="btn btn-secondary">Guardar Presupuesto</button>
                                    <button type="button" onclick="CreateReport()" class="btn btn-secondary">Generar PDF</button>
                                </div>
                            </div>
                        </div>
                        <!-- /.card-body -->
                    </div>
                </div>
            </div>
        </div>
    </section>
</div>
<!-- /.content-wrapper -->
<!-- Modal -->
<div class="modal" id="FormModal" role="dialog">
    <div class="modal-dialog modal-lg">
        <div class="modal-content">
            <div class="modal-header">
                <h4 class="modal-title">Editar Línea</h4>

            </div>
            <div class="modal-body">
                <form id="frmModal" role="form">
                    <input type="hidden" id="txtBudgetLineId" />
                    <div class="row">
                        <div class="form-group col-8 col-lg-6">
                            <label for="txtMaterialDescriptionEdit">Descripción</label>
                            <input type="text" id="txtMaterialDescriptionEdit" class="form-control" value="">
                        </div>
                        <div class="form-group col-3 col-lg-2">
                            <label for="cmbUOM">Unidad Medida</label>
                            <select id="cmbUOM" class="form-control select2bs4">
                                <option>Kg</option>
                                <option>Unidad</option>
                                <option>Metro</option>
                            </select>
                        </div>
                        <div class="form-group col-2 col-lg-2">
                            <label for="txtQuantityEdit">Cantidad</label>
                            <input type="number" id="txtQuantityEdit" class="form-control" value="0" step="1">
                        </div>
                        <div class="form-group col-2 col-lg-2">
                            <label for="txtPriceEdit">Precio</label>
                            <input type="number" id="txtPriceEdit" class="form-control" value="0" step="1">
                        </div>
                    </div>
                </form>
            </div>
            <div class="modal-footer justify-content-between">
                <button type="button" class="btn btn-secondary" onclick="SaveBudgetLine('E')">Guardar</button>
                <button type="button" class="btn btn-default" data-dismiss="modal">Cerrar</button>
            </div>
        </div>
        <!-- /.modal-content -->
    </div>
    <!-- /.modal-dialog -->
</div>
<!-- /.modal -->

@section scripts{

    <!-- Select2 -->
    <script src="~/Scripts/AdminLTE/plugins/select2/js/select2.full.min.js"></script>

    <script src="~/Scripts/AdminLTE/plugins/pdfmake/pdfmake.min.js"></script>
    <script src="~/Scripts/AdminLTE/plugins/pdfmake/vfs_fonts.js"></script>
    <script src="~/Scripts/AdminLTE/plugins/datatables-buttons/js/buttons.html5.min.js"></script>
    <script src="~/Scripts/AdminLTE/plugins/datatables-buttons/js/buttons.print.min.js"></script>
    <script src="~/Scripts/AdminLTE/plugins/datatables-buttons/js/buttons.colVis.min.js"></script>



    <script>

        var materialApi = new MaterialApi();
        var budgetApi = new BudgetApi();
        let materials = [],
            budgetData = [],
            budget_table,
            budgetId,
            preCalcs = {
                TotalLine: {
                    Value: 0,
                    DisplayValue: '',
                },
                PreSubtotal: {
                    Value: 0,
                    DisplayValue: '',
                },
                PreFinalTotal: {
                    Value: 0,
                    DisplayValue: '',
                }
            },
            totalsData = {
                Fee: 0,
                Subtotal: {
                    Value: 0,
                    DisplayValue: '',
                },
                FinalTotal: {
                    Value: 0,
                    DisplayValue: '',
                }
            };
        var formatter = new Intl.NumberFormat('en-US', {
            style: 'currency',
            currency: 'CRC',
            });

        $(document).ready(function () {

            //Initialize Select2 Elements
            $('.select2').select2()

            //Initialize Select2 Elements
            $('.select2bs4').select2({
                theme: 'bootstrap4'
            })

            $('#btnViewVendor').hide();
            var url = new URL(window.location.href);
            budgetId = url.searchParams.get("Id");

            LoadBudgetData(budgetId);
            LoadMaterials();

        });

        function LoadBudgetData(budgetId) {
            budget_table = $('#myTable').DataTable({
                 "ajax": {
                    "url": `/ArquisoftApp/Budget/GetBudgetLines?budgetId=${budgetId}`,
                    "dataSrc": function (json) {

                        let JsonBudgetData = JSON.parse(json.data);
                        JsonBudgetData = JsonBudgetData[0];

                        totalsData.Fee = JsonBudgetData.Fee;
                        totalsData.Subtotal.Value = JsonBudgetData.Subtotal;
                        totalsData.Subtotal.DisplayValue = formatter.format(JsonBudgetData.Subtotal).replace('CRC', '₡');

                        totalsData.FinalTotal.Value = JsonBudgetData.Total;
                        totalsData.FinalTotal.DisplayValue = formatter.format(JsonBudgetData.Total).replace('CRC', '₡');

                        if (JsonBudgetData.Lines[0].Id) {
                            $.each(JsonBudgetData.Lines, function (key, obj) {
                                if (obj.Id) {
                                    obj.totalLine = parseFloat(obj.Price) * parseInt(obj.Quantity);
                                    obj.totalLine = `${formatter.format(obj.totalLine).replace('CRC', '₡')}`;
                                    obj.Price = `${formatter.format(obj.Price).replace('CRC', '₡')}`;
                                }
                            });
                        }
                        else
                            JsonBudgetData.Lines = [];


                        budgetData = JsonBudgetData.Lines;
                        LoadTotalCard();
                        return JsonBudgetData.Lines;
                    }
                 },
                 "columns": [
                     { "data": "Description" },
                     { "data": "UOM" },
                     { "data": "Quantity" },
                     { "data": "Price" },
                     { "data": "totalLine" },
                     {
                         "data": "Id", "render": function (data) {
                             var buttons = "";
                             buttons += "<button data-toggle='tooltip' data-placement='top' title='Acción para realizar cambios en los datos de los materiales' class='btn btn-outline-secondary btn-sm' type='button' onclick='OpenEditModal(" + data + ")'><i class='fas fa-pen'></i></button>"
                             buttons += "<button data-toggle='tooltip' data-placement='top' title='Acción para realizar el eliminado de materiales' class='btn btn-outline-secondary btn-sm ml-2' type='button' onclick='DeleteBudgetLine(" + data + ")'><i class='fa fa-trash'></i></button>"

                             return buttons;
                         },
                         "orderable": false,
                         "searchable": false,
                         "width": "100px"
                     }
                 ],
                //dom: 'Bfrtip',//'<"float-left"f>rt<"bottom float-left"pb><"clear">',
                dom: 'Bfrtip',
                buttons: [
                    'copy', 'csv', 'excel', 'pdf', 'print', 'colvis'
                ],
                //buttons: [],
                "language": {
                     "url": "@Url.Content("~/Content/datatable/idioma/datatable.es-ES.json")"
                }

            });
        }

        function LoadMaterials() {

            var $MaterialSelect = $('#cmbMaterials');

            materialApi.ListMaterials().then(res => {
                $.each(res.data, function (key, value) {
                    materials.push(value);
                    var $option = $("<option/>", {
                        value: `${value.Id}|S`,
                        text: `${value.Description.trimEnd()}`
                    });

                    $MaterialSelect.append($option);
                });
            });

            materialApi.ListVendorMaterials().then(res => {
                $.each(res.data, function (key, value) {
                    materials.push(value);
                    var $option = $("<option/>", {
                        value: `${value.Id}|P`,
                        text: `${value.Description.trimEnd()}`
                    });
                    $MaterialSelect.append($option);
                });
            });
        }

        function SaveBudgetLine(action) {
            var $data = {
                oBudgetLine: {
                    Id: action == 'A' ? 0 : parseInt($("#txtBudgetLineId").val()),
                    Description: action == 'A' ? $("#txtMaterialDescription").val() : $("#txtMaterialDescriptionEdit").val(),
                    Quantity: action == 'A' ? parseInt($("#txtQuantity").val()) : parseInt($("#txtQuantityEdit").val()),
                    Price: action == 'A' ? parseFloat($("#txtPrice").val()) : parseFloat($("#txtPriceEdit").val()),
                    UOM: 'kg',
                    BudgetId: budgetId
                },
                oBudget: {
                    Id: budgetId,
                    Fee: totalsData.Fee,
                    Total: preCalcs.PreSubtotal.Value
                }
            }

            budgetApi.SaveBudgetLine($data).then(response => {
                if (response) {
                    toastr.success('Linea guardada correctamente.');
                    budget_table.ajax.reload();

                    if (action == 'E')
                        $('#FormModal').modal('hide');
                    else {
                        $("#txtMaterialDescription").val('');
                        $("#txtQuantity").val('0');
                        $("#txtPrice").val('0');
                        $("#cmbMaterials").val();
                        $("#cmbUOM").val(0);
                        $("#txtTotalLine").val(`₡0`);
                        $("#txtPreSubtotal").val(`₡0`);
                    }

                    LoadTotalCard();
                } else {
                    toastr.error(response.result);
                }

            }).catch(err => {

                toastr.error("Ocurrió un error guardando los datos del Proyecto.");
            })
        }

        function DeleteBudgetLine($budgetLineId) {
            if (confirm("¿Realmente desea eliminar esta línea?")) {

                var $data = {
                    budgetLineId: $budgetLineId,
                    oBudget: {
                        Id: budgetId,
                        Fee: totalsData.Fee,
                        Total: preCalcs.PreSubtotal.Value
                    }
                }

                budgetApi.DeleteBudgetLine($data).then(response => {
                    if (response.result) {
                        budget_table.ajax.reload();
                        toastr.success('Linea eliminada correctamente.');
                        LoadTotalCard();
                        //LoadBudgetData(budgetId)
                    }
                }).catch(err => {
                    toastr.error("Ocurrió un error eliminando los datos de línea.");
                })
            }
        }

        function OpenEditModal($budgetLineId) {

            if ($budgetLineId != 0) {

                try {
                    $.each(budgetData, function (key, line) {
                        if (line.Id == $budgetLineId) {
                            $("#txtBudgetLineId").val(line.Id);
                            $("#txtMaterialDescriptionEdit").val(line.Description);
                            $("#txtQuantityEdit").val(line.Quantity);
                            $("#txtPriceEdit").val(line.Price.replace('₡', ''));
                        }
                    })


                } catch (err) {
                    console.log(err);
                    toastr.error("Ocurrió un error cargando los datos de usuario seleccionado.");
                }
            }
            $('#FormModal').modal('show');
        }

        function LoadTotalCard() {

            $("#txtFees").val(totalsData.Fee);
            $("#txtSubtotal").val(`${totalsData.Subtotal.DisplayValue}`);
            $("#txtFinalTotal").val(`${totalsData.FinalTotal.DisplayValue}`);


        }

        function LoadPreCalc(action) {

            var itemPrice = action == 'N' ? parseFloat($("#txtPrice").val()) : parseFloat($("#txtPriceEdit").val());
            var itemQuantity = action == 'N' ? parseInt($("#txtQuantity").val()) : parseFloat($("#txtQuantityEdit").val());

            preCalcs.TotalLine.Value = itemPrice * itemQuantity
            preCalcs.TotalLine.DisplayValue = formatter.format(preCalcs.TotalLine.Value).replace('CRC', '₡');

            preCalcs.PreSubtotal.Value = totalsData.Subtotal.Value + preCalcs.TotalLine.Value;
            preCalcs.PreSubtotal.DisplayValue = formatter.format(preCalcs.PreSubtotal.Value).replace('CRC', '₡');


            preCalcs.PreFinalTotal.Value = (preCalcs.PreSubtotal.Value * (totalsData.Fee / 100)) + preCalcs.PreSubtotal.Value;
            preCalcs.PreFinalTotal.DisplayValue = formatter.format(preCalcs.PreFinalTotal.Value).replace('CRC', '₡');

            if (action == 'N') {


                
                $("#txtTotalLine").val(preCalcs.TotalLine.DisplayValue);
                $("#txtPreSubtotal").val(preCalcs.PreSubtotal.DisplayValue);
            }
        }

        function CreateReport() {

            window.open(`/ArquisoftApp/Budget/Report?Id=9`, '_blank').focus();

            //window.location.href = `/ArquisoftApp/Budget/Report?Id=9`;
        }

        // Events
        $('#cmbMaterials').on('change', function (e) {
            var valueSelected = this.value.split('|')[0]
            var typeSelected = this.value.split('|')[1];

            $.each(materials, function (key, value) {
                if (value.Id == valueSelected) {
                    $("#txtMaterialDescription").val(value.Description);
                    $("#txtQuantity").val();
                    $("#txtPrice").val(value.Price);
                    $("#txtPreSubtotal").val(0);
                    $("#txtPreFinalTotal").val(0);

                    if (typeSelected === 'P') {
                        $('#btnViewVendor').show();
                        $("#btnViewVendor").attr("href", value.SiteURL)
                    }
                    else
                        $('#btnViewVendor').hide();
                }
            });
        });


        $('#txtFees').on('change', function (e) {

            var currentSubtotal = totalsData.Subtotal.Value;
            var fee = parseInt($("#txtFees").val());
            totalsData.Fee = fee;

            $("#txtFinalTotal").val(`₡${(currentSubtotal * (fee / 100)) + currentSubtotal}`);
        });


        $('#txtQuantity').on('change', function (e) {
            LoadPreCalc('N');
        });

        $('#txtPrice').on('change', function (e) {
            LoadPreCalc('N');
        });

        $('#txtQuantityEdit').on('change', function (e) {
            LoadPreCalc('E');
        });

        $('#txtPriceEdit').on('change', function (e) {
            LoadPreCalc('E');
        });


    </script>

}